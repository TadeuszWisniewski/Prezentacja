<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:vw="clr-namespace:TDAUTadeuszWisniewskiProjekt.Views"
                    xmlns:vm="clr-namespace:TDAUTadeuszWisniewskiProjekt.ViewModels">



    <DataTemplate DataType="{x:Type vm:WszyscyKontrahenciViewModel}">
        <vw:WszyscyKontrahenciView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NoweMiejsceUrodzeniaViewModel}">
        <vw:NoweMiejsceUrodzeniaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieMiejscaUrodzeniaViewModel}">
        <vw:WszystkieMiejscaUrodzeniaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieAdresyZameldowaniaViewModel}">
        <vw:WszystkieAdresyZameldowaniaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieAdresyDoKorespondencjiViewModel}">
        <vw:WszystkieAdresyDoKorespondencjiView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyAdresZameldowaniaViewModel}">
        <vw:NowyAdresZameldowaniaView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyTowarViewModel}">
        <vw:NowyTowarView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieTowaryViewModel}">
        <vw:WszystkieTowaryView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyPracownikViewModel}">
        <vw:NowyPracownikView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszyscyPracownicyViewModel}">
        <vw:WszyscyPracownicyView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaFakturaViewModel}">
        <vw:NowaFakturaView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieFakturyViewModel}">
        <vw:WszystkieFakturyView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyKontrahentViewModel}">
        <vw:NowyKontrahentView />
    </DataTemplate>
    <!--TutajZaczynam-->
    <DataTemplate DataType="{x:Type vm:NowyWymiarEtatuViewModel}">
        <vw:NowyWymiarEtatuView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieWymiaryEtatuViewModel}">
        <vw:WszystkieWymiaryEtatuView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NoweWojewodztwoViewModel}">
        <vw:NoweWojewodztwoView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieWojewodztwaViewModel}">
        <vw:WszystkieWojewodztwaView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaWalutaViewModel}">
        <vw:NowaWalutaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieWalutyViewModel}">
        <vw:WszystkieWalutyView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyTypUmowyOPraceViewModel}">
        <vw:NowyTypUmowyOPraceView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieTypyUmowOPraceViewModel}">
        <vw:WszystkieTypyUmowyOPraceView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyTypStawkiViewModel}">
        <vw:NowyTypStawkiView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieTypyStawkiViewModel}">
        <vw:WszystkieTypyStawkiView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyTypNIPViewModel}">
        <vw:NowyTypNIPView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieTypyNIPViewModel}">
        <vw:WszystkieTypyNIPView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyTypViewModel}">
        <vw:NowyTypView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieTypyViewModel}">
        <vw:WszystkieTypyView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyStatusWBazieViewModel}">
        <vw:NowyStatusWBazieView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieStatusyWBazieViewModel}">
        <vw:WszystkieStatusyWBazieView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyStatusViewModel}">
        <vw:NowyStatusView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieStatusyViewModel}">
        <vw:WszystkieStatusyView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieStatusyWBazieVIESViewModel}">
        <vw:WszystkieStatusyWBazieVIESView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NoweStanowiskoViewModel}">
        <vw:NoweStanowiskoView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieStanowiskaViewModel}">
        <vw:WszystkieStanowiskaView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyRodzajVATViewModel}">
        <vw:NowyRodzajVATView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieRodzajeVATViewModel}">
        <vw:WszystkieRodzajeVATView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieRodzajeVATZakupuViewModel}">
        <vw:WszystkieRodzajeVATZakupuView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaPodstawaZatrudnieniaViewModel}">
        <vw:NowaPodstawaZatrudnieniaView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkiePodstawyZatrudnieniaViewModel}">
        <vw:WszystkiePodstawyZatrudnieniaView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyMiejscowoscViewModel}">
        <vw:NowaMiejscowoscView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieMiejscowosciViewModel}">
        <vw:WszystkieMiejscowosciView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyKrajViewModel}">
        <vw:NowyKrajView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieKrajeViewModel}">
        <vw:WszystkieKrajeView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyKodCPVViewModel}">
        <vw:NowyKodCPVView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieKodyCPVViewModel}">
        <vw:WszystkieKodyCPVView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaJednostkaOrganizacyjnaViewModel}">
        <vw:NowaJednostkaOrganizacyjnaView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieJednostkiOrganizacyjneViewModel}">
        <vw:WszystkieJednostkiOrganizacyjneView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaJednostkaViewModel}">
        <vw:NowaJednostkaView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieJednostkiViewModel}">
        <vw:WszystkieJednostkiView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaFormaPrawnaViewModel}">
        <vw:NowaFormaPrawnaView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieFormyPrawneViewModel}">
        <vw:WszystkieFormyPrawneView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyEANTypViewModel}">
        <vw:NowyEANTypView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieTypyEANViewModel}">
        <vw:WszystkieEANTypyWiev />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaDefinicjaPlatnosciViewModel}">
        <vw:NowaDefinicjaPlatnosciView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieDefinicjePlatnosciViewModel}">
        <vw:WszystkieDefinicjePlatnosciView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaCenaViewModel}">
        <vw:NowaCenaView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieCenyViewModel}">
        <vw:WszystkieCenyView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieCenyWyprzedazyViewModel}">
        <vw:WszystkieCenyWyprzedazyView />
    </DataTemplate>

    <!--Kolory-->
    <Thickness x:Key="TinyThickness">2</Thickness>
    <Thickness x:Key="SmallThickness">4</Thickness>
    <Thickness x:Key="MediumThickness">6</Thickness>
    <Thickness x:Key="LargeThickness">8</Thickness>

    <Color x:Key="PrimaryColor">#C4DFDF</Color>
    <Color x:Key="SecondaryColor">#D2E9E9</Color>
    <Color x:Key="AccentColor">#E3F4F4</Color>
    <Color x:Key="AccentColor2">#F8F6F4</Color>
    <Color x:Key="StandardColor">Azure</Color>

    <SolidColorBrush x:Key="PrimaryBrush">#C4DFDF</SolidColorBrush>
    <SolidColorBrush x:Key="SecondaryBrush">#D2E9E9</SolidColorBrush>
    <SolidColorBrush x:Key="AccentBrush">#E3F4F4</SolidColorBrush>
    <SolidColorBrush x:Key="AccentBrush2">#F8F6F4</SolidColorBrush>
    <SolidColorBrush x:Key="StandardBrush">Azure</SolidColorBrush>

    <Style TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />

    </Style>

    <Style x:Name="coś" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />
        <Setter Property="CornerRadius" Value="5" />
    </Style>


    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />

    </Style>
    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="BorderThickness" Value="1" />

    </Style>
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="BorderThickness" Value="1" />

    </Style>

    <Style x:Key="Podstawowy" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />

    </Style>

    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}"  BasedOn="{StaticResource Podstawowy}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>

                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
      This template ensures that content of a HeaderedContentControl 
      fills the available vertical space. 
      -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
            DockPanel.Dock="Top"
            ContentSource="Header" 
            ContentTemplate="{TemplateBinding HeaderTemplate}" 
            />
                        <ContentPresenter 
            ContentSource="Content" 
            ContentTemplate="{TemplateBinding ContentTemplate}" 
            />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
This style ensures that the borders in the main window are consistent.
-->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
This template explains how to render the list of commands on the left
side in the main window (the 'Control Panel' area).
-->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding DisplayName}" Command="{Binding Path=Command}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="{StaticResource SmallThickness}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5"
                          Background="{StaticResource SecondaryBrush}"
                          BorderThickness="{StaticResource TinyThickness}"
                          BorderBrush="{StaticResource PrimaryBrush}">
                        <ContentPresenter
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                      ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
This template explains how to render 
a tab item with a close button.
-->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
      Command="{Binding Path=CloseCommand}"
      Content="X"
      Cursor="Hand"
      DockPanel.Dock="Right"
      Focusable="False"
      FontFamily="Courier" 
      FontSize="9"
      FontWeight="Bold"  
      Margin="0,1,0,0"
      Padding="0"
      VerticalContentAlignment="Bottom"
      Width="16" Height="16" 
      Background="{StaticResource AccentBrush2}"
      />
            <ContentPresenter 
      Content="{Binding Path=DisplayName}" 
      VerticalAlignment="Center" 
      
      />

        </DockPanel>
    </DataTemplate>

    <!--
This template explains how to render the 'Workspace' content area in the main window.
-->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
    IsSynchronizedWithCurrentItem="True" 
    ItemsSource="{Binding}" 
    ItemTemplate="{StaticResource ClosableTabItemTemplate}"
    Margin="{StaticResource SmallThickness}"
    Background="{StaticResource AccentBrush2}"
    BorderThickness="{StaticResource TinyThickness}"
        />

    </DataTemplate>

</ResourceDictionary>